"use strict";(self.webpackChunkyskye=self.webpackChunkyskye||[]).push([[636],{5129:(s,i,a)=>{a.r(i),a.d(i,{comp:()=>b,data:()=>C});var l=a(641);const n=a.p+"assets/img/yuque_mind.d3825ab8.jpeg",h=a.p+"assets/img/1728635730616.e0ca9ed9.png",e=a.p+"assets/img/1728635812618.c8b0d72a.png",t=a.p+"assets/img/5b3bb891636fb1908a50836f50c447c0.63555c4a.png",p=a.p+"assets/img/97eaa1877828d1975afc61e109dbba85.2278fab6.png",k=a.p+"assets/img/f7c3e7fc436b3644270230bbe76e24af.990b5653.png",d=a.p+"assets/img/18739e0cd19ac159fc2420a0b06302e9.c3beb7ec.png",r=a.p+"assets/img/9d8dc7dd8e2ee2145c21dbe4d33dd733.9a1f1bda.png",g=a.p+"assets/img/faeba4c3f0b2f818d347189f790fb3d0.f383edb3.png",c=a.p+"assets/img/03c806b5e1442f46706256ac474bba46.8c680cdd.png",y=a.p+"assets/img/05e1ebb3e5a947f391d960d718197c39.47ca92a9.png",A=a.p+"assets/img/5715ba6aeedf8cfa77c8a08fc4627126.064de239.png",o=a.p+"assets/img/1728641189332.b4486707.png",u={},b=(0,a(6262).A)(u,[["render",function(s,i){return(0,l.uX)(),(0,l.CE)("div",null,i[0]||(i[0]=[(0,l.Fv)('<h2 id="知识点" tabindex="-1"><a class="header-anchor" href="#知识点"><span>知识点</span></a></h2><h3 id="解题sop" tabindex="-1"><a class="header-anchor" href="#解题sop"><span>解题sop</span></a></h3><p><img src="'+n+'" alt="画板"></p><h3 id="ida用法" tabindex="-1"><a class="header-anchor" href="#ida用法"><span>ida用法</span></a></h3><h4 id="常用快捷键" tabindex="-1"><a class="header-anchor" href="#常用快捷键"><span>常用快捷键</span></a></h4><h5 id="f系列【主要是调试状态的处理】" tabindex="-1"><a class="header-anchor" href="#f系列【主要是调试状态的处理】"><span>F系列【主要是调试状态的处理】</span></a></h5><ul><li>F2 添加/删除断点</li><li>F4 运行到光标所在位置</li><li>F5 反汇编</li><li>F7 单步步入</li><li>F8 单步跳过</li><li>F9 持续运行直到输入/断点/结束</li></ul><h5 id="shift系列【主要是调出对应的页面】" tabindex="-1"><a class="header-anchor" href="#shift系列【主要是调出对应的页面】"><span>shift系列【主要是调出对应的页面】</span></a></h5><ul><li>shift+F1 Local types</li><li>shift+F2 execute scripts【常用】</li><li>shift+F3 Functions</li><li>shift+F4 Names</li><li>shift+F5 Signatures</li><li>shift+F7 Segments</li><li>shift+F8 Segments registers</li><li>shift+F9 Structures</li><li>shift+F10 Enumerations</li><li>shift+F11 Type libraries</li><li>shift+F12 Strings【常用】</li><li>Shift+E 导出数据【常用】</li></ul><h5 id="单字符系列【基本是数据处理转换相关】" tabindex="-1"><a class="header-anchor" href="#单字符系列【基本是数据处理转换相关】"><span>单字符系列【基本是数据处理转换相关】</span></a></h5><p>【这些都比较常用】</p><ul><li>G 按地址查找</li><li>D 将字符串等元素转为数据</li><li>N 重命名（函数名、变量名等）</li><li>Y 修改变量类型等（比如int改char等等）</li><li>H decimal 数据的进制快速转换</li><li>A 将数据转变为字符串类型</li><li>C code（将数据转变为汇编代码，分为自动和强制执行）</li><li>U undefined（将字符串转变为原始数据）</li><li>X 交叉引用（反汇编页面）</li><li>P 选中位置识别为函数</li></ul><h5 id="ctrl、alt系列" tabindex="-1"><a class="header-anchor" href="#ctrl、alt系列"><span>Ctrl、Alt系列</span></a></h5><ul><li>Ctrl+F 搜索【常用】</li><li>Ctrl+X 交叉引用（汇编页面）【常用】</li><li>Alt+T 查找Text</li><li>Ctrl+T 查找下一个text</li><li>Alt+C Next Code</li><li>Ctrl+D Next Data</li><li>Ctrl+Z 撤销</li><li>Ctrl+S 跳转到任意段</li><li>Ctrl+Shift+Z 恢复</li><li>Alt+K 修改堆栈值</li></ul><h5 id="else" tabindex="-1"><a class="header-anchor" href="#else"><span>else</span></a></h5><ul><li>/ 添加注释 or 右键选择edit comment【常用】</li><li>\\ hide cast，隐藏/显示一些变量类型注解</li><li>Ins 添加区块注释</li><li>快捷键“Tab”/“F5”主要用于在汇编指令和伪代码之间进行切换，并将光标移动到对应的代码处</li><li>“空格键”的主要功能是用于在反汇编窗口的文本视图和图形视图之间进行切换</li></ul><h4 id="动态调试" tabindex="-1"><a class="header-anchor" href="#动态调试"><span>动态调试</span></a></h4><h5 id="f系列【主要是调试状态的处理】-1" tabindex="-1"><a class="header-anchor" href="#f系列【主要是调试状态的处理】-1"><span>F系列【主要是调试状态的处理】</span></a></h5><ul><li>F2 添加/删除断点</li><li>F4 运行到光标所在位置</li><li>F5 反汇编</li><li>F7 单步步入</li><li>F8 单步跳过</li><li>F9 持续运行直到输入/断点/结束</li></ul><h4 id="ida-代码修复-数组识别" tabindex="-1"><a class="header-anchor" href="#ida-代码修复-数组识别"><span>IDA 代码修复 &amp; 数组识别</span></a></h4><ul><li>在伪代码区修改反编译语法为熟悉的语法，如：“scanf”&quot;printf”；</li><li>遇到“=”后面的<strong>数字</strong>可以试图转换为<strong>字符串</strong>，更易理解；</li><li>重定义函数类型：右键“Set item type...Y”（快捷键为Y），重新定义类型</li><li>两个数组连续，可能是ida将其切分错误，应该为同一个字符串，重新定义数组命名即可自动合并</li></ul><h3 id="upx脱壳" tabindex="-1"><a class="header-anchor" href="#upx脱壳"><span>UPX脱壳</span></a></h3><h5 id="命令行脱壳" tabindex="-1"><a class="header-anchor" href="#命令行脱壳"><span>命令行脱壳</span></a></h5><div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">cd D:\\CTF\\</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">#Tool</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">\\脱壳\\upx</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">-</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">4.2.1</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">-</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">win64脱壳</span></span>\n<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">upx </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">-</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">d 地址</span></span>\n<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">pause</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="手动脱壳" tabindex="-1"><a class="header-anchor" href="#手动脱壳"><span>手动脱壳</span></a></h5><h3 id="python" tabindex="-1"><a class="header-anchor" href="#python"><span>Python</span></a></h3><h4 id="简简单单的逻辑" tabindex="-1"><a class="header-anchor" href="#简简单单的逻辑"><span>简简单单的逻辑</span></a></h4><div class="language-python line-numbers-mode" data-ext="python" data-title="python"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">flag </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">xxxxxxxxxxxxxxxxxx</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span></span>\n<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">list</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> [</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">47</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 138</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 127</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 57</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 117</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 188</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 51</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 143</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 17</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 84</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 42</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 135</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 76</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 105</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 28</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 169</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 25</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">]</span></span>\n<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">result </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &#39;&#39;</span></span>\n<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">for</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> i </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">in</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> range</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">len</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">list</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)):</span></span>\n<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    key </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">list</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">[</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">i</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">]</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">&gt;&gt;</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">4</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">+</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">((</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">list</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">[</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">i</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">]</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> &amp;</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> 0x</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">f</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">&lt;&lt;</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">4</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span></span>\n<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    result </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">+=</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> str</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">hex</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">ord</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">flag</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">[</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">i</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">])</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">^</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">key</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">))[</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">2</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:].</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">zfill</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">2</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span></span>\n<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">print</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">result</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span></span>\n<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># result=bcfba4d0038d48bd4b00f82796d393dfec</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>代码解释：</p><p><code>list</code>中的<code>i</code>个字符经过<code>key</code>的加密，与<code>flag</code>进行异或计算，用<code>hex</code>转成16进制，使用<code>[2:]</code>进行截取，再用<code>str</code>转化成字符，并用<code>zfill</code>补全。</p><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>知识补充</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>ord把一个字符转换为ASCII码</span></span>\n<span class="line"><span></span></span>\n<span class="line"><span>hex 生成的16进制字符串带0x前缀，需要使用[2:]进行截取  </span></span>\n<span class="line"><span>zfill 是将字符串填充至目标位数，位数不足的前面补零</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>逆向代码</p><div class="language-python line-numbers-mode" data-ext="python" data-title="python"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">result </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">bcfba4d0038d48bd4b00f82796d393dfec</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span></span>\n<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">flag </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &#39;&#39;</span></span>\n<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">list</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> [</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">47</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 138</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 127</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 57</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 117</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 188</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 51</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 143</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 17</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 84</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 42</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 135</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 76</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 105</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 28</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 169</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 25</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">]</span></span>\n<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">for</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> i </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">in</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> range</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">len</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">list</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)):</span></span>\n<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    key </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">=</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">list</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">[</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">i</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">]</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> &gt;&gt;</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 4</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> +</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> ((</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">list</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">[</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">i</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">]</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> &amp;</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> 0x</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">f</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> &lt;&lt;</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 4</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span></span>\n<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    flag </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">+=</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> chr</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">int</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">result</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">[</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">2</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> *</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> i</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">2</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> *</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> i </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">+</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 2</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">],</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 16</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> ^</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> key</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span></span>\n<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">print</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">flag</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"># NSSCTF{EZEZ_RERE}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>代码解释：</p><p>将<code>result</code>将两个两个的取出，转换成16进制，与<code>key</code>异或，再转成字符,即可。</p><h3 id="base64" tabindex="-1"><a class="header-anchor" href="#base64"><span>Base64</span></a></h3><p>常见的思路：</p><ul><li>base64的格式主要以<code>==</code>结尾</li><li>特殊加密会使用<strong>自定义映射字符</strong>（标准为<code>ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/</code>）</li><li>通过自定义映射字符解密即可<a href="http://web.chacuo.net/netbasex" target="_blank" rel="noopener noreferrer">在线自定义base64编解码</a>。</li></ul><h3 id="安卓逆向" tabindex="-1"><a class="header-anchor" href="#安卓逆向"><span>安卓逆向</span></a></h3><h4 id="环境配置" tabindex="-1"><a class="header-anchor" href="#环境配置"><span>环境配置</span></a></h4><p><a href="https://blog.csdn.net/liKeQing1027520/article/details/138134138" target="_blank" rel="noopener noreferrer">安卓逆向基础流程（纯小白教程）-CSDN博客</a></p><h4 id="逆向流程" tabindex="-1"><a class="header-anchor" href="#逆向流程"><span>逆向流程</span></a></h4><ul><li>丢进jadx和安卓模拟器</li></ul><h5 id="session1-activity" tabindex="-1"><a class="header-anchor" href="#session1-activity"><span>Session1: Activity</span></a></h5><p>一个Activity就是一个页面呢，每一次页面切换，就是Activity 的切换。问题来了，我们怎么才能知道一个软件有哪些Activity呢？</p><p>答案是 查找AndroidManifest.xml文件里的Activity标签</p><h5 id="session2-src" tabindex="-1"><a class="header-anchor" href="#session2-src"><span>Session2: Src</span></a></h5><p>在 apk运行时可显示的大部分图片，字符串，都会被赋予一个int值，然后由一个R类同一管理，而具体的数据则是在res里的drawable和value里，value里的 string.xml(resources.arsc/res/value/) 有你想要的字符串，你能找到这段flag吗喵</p><h5 id="session3-layout" tabindex="-1"><a class="header-anchor" href="#session3-layout"><span>Session3: Layout</span></a></h5><p>layout就是布局的意思呢，/res/layout里的带Activity字样的xml文件通常是用来描述一个Activity的大体布局，你能找到布局里藏起来的flag吗喵？</p><h5 id="session4-raw-res" tabindex="-1"><a class="header-anchor" href="#session4-raw-res"><span>Session4: Raw Res</span></a></h5><p>你知道吗？？apk中不用编译的资源（一下其他类型的文件)通常放在/assets目录和/res/raw目录下呢，你能找到第四段flag吗喵？（悄悄告诉你，这个比赛很容易考到呢)</p><h5 id="session5-native-code" tabindex="-1"><a class="header-anchor" href="#session5-native-code"><span>Session5 : Native code</span></a></h5><p>导出ezandroidstudy.so文件，丢进ida</p><h3 id="debug" tabindex="-1"><a class="header-anchor" href="#debug"><span>Debug</span></a></h3><p>丢进观察代码</p><p><img src="'+h+'" alt=""></p><p>反汇编得到的是c++代码，main函数里找一找，有个you()函数被调用了</p><p>这个you()函数就是关键加密，它的逻辑是：不管你输入的字符串是正确的还是错误的flag，它都会将正确的flag解密出来然后临时开辟一块内存来存放(说白了就是强迫你动态调试才能看到flag)</p><p>所以你在you()函数里面找一找那个用来存放flag的变量，在flag被解密后打断点，去看它的值，就拿到flag了</p><p>其实解密flag的过程就是那个for循环</p><p>循环一结束，flag的内存就被回收了，所以看不到</p><p>就是用这种机制来强迫你动调的</p><p><img src="'+e+'" alt=""></p><h4 id="local-windows-debugger" tabindex="-1"><a class="header-anchor" href="#local-windows-debugger"><span>Local Windows debugger</span></a></h4><p><img src="'+t+'" alt="在这里插入图片描述"></p><p><strong>本地调试启动</strong>方法 载入IDA后，程序实际上在对程序内置的一个字符串进行base64解码</p><p>考虑到运行过程中会直接生成所需的明文，所以调试直接抓取最终的嗯嗯解码结果会更加便捷</p><p>选择后端，选择调试器后端为Local Windows debugger“ ，即可使用IDA内置的调试器 开始调试，IDA调试OD和x64DBG的快捷键基本一致，要启动程序只需要按F9即可，单击相应工具栏的绿色的三角形可以。在启动调试前，IDA会弹出一个确认对话框，单击”Yes“按钮，即可调试 被调试文件默认的额路径为输入文件的路径，若目标文件不存在，或其他原因加载失败，IDA均会弹出警告对话框，确认后会进入Debug application setup设置的对话框</p><p><img src="'+p+'" alt="在这里插入图片描述"></p><p>设置后单击”OK“按钮，IDA重新尝试启动程序</p><h4 id="设置断点" tabindex="-1"><a class="header-anchor" href="#设置断点"><span>设置断点</span></a></h4><h4 id="查看变量" tabindex="-1"><a class="header-anchor" href="#查看变量"><span>查看变量</span></a></h4><p>在中断后，选择<code>Debugger-&gt;Debugger windows-&gt;Locals</code>菜单命令，打开查看局部变量的窗口</p><p><img src="'+k+'" alt="在这里插入图片描述"></p><p><img src="'+d+'" alt="在这里插入图片描述"></p><p><img src="'+r+'" alt="在这里插入图片描述"></p><p>默认情况下，locals窗口与伪代码窗口一起显示</p><p><img src="'+r+'" alt="在这里插入图片描述"></p><p>单步执行至scanf，会发现程序进入运行状态，此时等待用户输入，随意输入一些内容后回车，程序再次中断</p><p>此时Loacal窗口中的v13变量显示刚才输入的值</p><p><img src="'+g+'" alt="在这里插入图片描述"></p><p>红色代表这些变量的值被修改过</p><p>继续执行程序至base64_decode后，可以看见v5已经被修改成另有一个值</p><p><img src="'+c+'" alt="在这里插入图片描述"></p><p>但实际上v5为一个字符串，存放着正确的输入</p><h4 id="如何获取v5的内容" tabindex="-1"><a class="header-anchor" href="#如何获取v5的内容"><span>如何获取v5的内容</span></a></h4><ol><li><strong>在Locals窗口的Location栏中可以看到v5的位置为RDI，在寄存器窗口可以看到RDI的值，单击其值右侧的按钮，可以可看见flag</strong></li><li><strong>修改v5的了类型，从_BYTE修改为char，此时HexRays会认为v5是一个字符串，从而将其在Locals中显示出来，具体操作：在伪代码窗口中按Y键，修改v5类型为char*并确认，然后在Loacls窗口中右键单击Refresh刷新</strong></li></ol><p><img src="'+y+'" alt="在这里插入图片描述"></p><p><img src="'+A+'" alt="在这里插入图片描述"></p><p>至此，我们成功的利用调试找到了内存中的flag</p><p><img src="'+o+'" alt=""></p>',92)]))}]]),C=JSON.parse('{"path":"/article/p4z4o7ca/","title":"CTF_wp","lang":"zh-CN","frontmatter":{"title":"CTF_wp","createTime":"2024/10/13 22:00:00","tags":["学习","CTF","逆向"],"permalink":"/article/p4z4o7ca/","head":[["script",{"id":"check-dark-mode"},";(function () {const um= localStorage.getItem(\'vuepress-theme-appearance\') || \'auto\';const sm = window.matchMedia && window.matchMedia(\'(prefers-color-scheme: dark)\').matches;const isDark = um === \'dark\' || (um !== \'light\' && sm);document.documentElement.dataset.theme = isDark ? \'dark\' : \'light\';})();"],["script",{"id":"check-mac-os"},"document.documentElement.classList.toggle(\'mac\', /Mac|iPhone|iPod|iPad/i.test(navigator.platform))"]]},"headers":[{"level":2,"title":"知识点","slug":"知识点","link":"#知识点","children":[{"level":3,"title":"解题sop","slug":"解题sop","link":"#解题sop","children":[]},{"level":3,"title":"ida用法","slug":"ida用法","link":"#ida用法","children":[]},{"level":3,"title":"UPX脱壳","slug":"upx脱壳","link":"#upx脱壳","children":[]},{"level":3,"title":"Python","slug":"python","link":"#python","children":[]},{"level":3,"title":"Base64","slug":"base64","link":"#base64","children":[]},{"level":3,"title":"安卓逆向","slug":"安卓逆向","link":"#安卓逆向","children":[]},{"level":3,"title":"Debug","slug":"debug","link":"#debug","children":[]}]}],"readingTime":{"minutes":7.22,"words":2167},"filePathRelative":"2.ctf/CTF_wp.md","categoryList":[{"id":"fb53bb","sort":2,"name":"ctf"}]}')}}]);